name: Deploy Astro Portfolio to VPS

on:
  push:
    branches:
      - main # Dispara el workflow cuando se hace push a la rama 'main' de tu portfolio

jobs:
  deploy:
    runs-on: ubuntu-latest # El runner de GitHub Actions
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.19.1' 
          cache: 'npm' 

      - name: Install NPM Dependencies
        run: npm install

      - name: Build Astro Project
        run: npm run build # Este comando compila Astro a la carpeta 'dist' por defecto

      - name: Sync Files and Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          env:
            SERVER_DIR: ${{ secrets.ASTRO_SERVER_DIR }} # Asegúrate que esto esté aquí
          script: |
            # 1. Asegurarse de que el directorio principal existe y tiene permisos correctos
            sudo mkdir -p "$SERVER_DIR"
            sudo chown -R mym3dapp:www-data "$SERVER_DIR"
            sudo chmod -R 775 "$SERVER_DIR"

            # 2. Eliminar la carpeta 'dist' antigua en el servidor antes de sincronizar
            sudo rm -rf "$SERVER_DIR"/dist

            echo "Preparando el servidor para rsync..."

            # 3. La parte de rsync.
            # ¡CAMBIA ESTA LÍNEA! Usamos github.workspace directamente para asegurar la ruta absoluta.
            rsync -avz --exclude='.git/' --exclude='node_modules/' ${{ github.workspace }}/dist/ "$SERVER_DIR"/dist/

            # 4. Ajustar permisos a la carpeta 'dist' recién sincronizada
            sudo chown -R www-data:www-data "$SERVER_DIR"/dist
            sudo find "$SERVER_DIR"/dist -type d -exec sudo chmod 755 {} +
            sudo find "$SERVER_DIR"/dist -type f -exec sudo chmod 644 {} +

            echo "Astro portfolio deployment complete!"